package protocol;

enum LSOp {
	//	S<->S
	RegisterServerReq = 11000;
	SavePlayerDataReq = 11001;
	UserInternalVerifyReq = 11002;
	UpdatePlayerRankReq = 11003;
	CheckCanBuyOlshopItemReq = 11004;
	CheckCanBuyOlshopItemRsp = 11005;
	SavePlayerExtDataReq = 11006;
	PlayerLoginHumDataNtf = 11007;
	PlayerLoginExtHumDataNtf = 11008;
	SyncPlayerRankNtf = 11009;
	RegisterServerRsp = 11010;
	ProtoTypeNtf = 11011;
	PlayerDisconnectedNtf = 11012;
	//	C<->LS
	LSAccessNtf = 11100;
	VerifyAccountReq = 11101;
	QuickMessageNtf = 11102;
	ServerListNtf = 11103;
	VerifyAccountRsp = 11104;
	PlayerHumBaseDataNtf = 11105;
	CreateHumReq = 11106;
	DelHumReq = 11107;
	LoginGameReq = 11108;
	CreateHumRsp = 11109;
	DelHumRsp = 11110;
	HeartBeatNtf = 11111;
	DonateAddNtf = 11112;
	//	C<->GS
	RegisterClientReq = 11200;
	RegisterClientRsp = 11201;
}

//	S<->S
message MRegisterServerReq {
	required string ServerName = 1;
	required string exposeAddress = 2;
	required int32 ServerID = 3;
}

message MRegisterServerRsp {
	required int32 Result = 1;
	optional string RPCAddress = 2;
}

message MSavePlayerDataReq {
	required int32 LID = 1;
	required string Name = 2;
	required uint32 UID = 3;
	required uint32 Level = 4;
	required bytes Data = 5;
	required int32 ServerID = 6;
}

message MUserInternalVerifyReq {
	required int32 LID = 1;
	required string AccessToken = 2;
	required int32 GID = 3;
	required int32 ConnCode = 4;
}

message MUpdatePlayerRankReq {
	required uint32 UID = 1;
	required string Name = 2;
	required uint32 Level = 3;
	required uint32 Job = 4;
	required uint32 Power = 5;
	required int32 ServerID = 6;
}

message MCheckCanBuyOlshopItemReq {
	required uint32 UID = 1;
	required uint32 GID = 2;
	required uint32 QueryId = 3;
	required uint32 Cost = 4;
	required uint32 ItemId = 5;
}

message MCheckCanBuyOlshopItemRsp {
	required int32 Result = 1;
	required uint32 UID = 2;
	required uint32 GID = 3;
	required uint32 QueryId = 4;
	required uint32 ItemId = 5;
}

message MSavePlayerExtDataReq {
	required int32 LID = 1;
	required string Name = 2;
	required uint32 UID = 3;
	required uint32 ExtIndex = 4;
	required bytes Data = 5;
	required int32 ServerID = 6;
}

message MPlayerLoginHumDataNtf {
	required int32 GID = 1;
	required int32 ConnID = 2;
	required int32 LID = 3;
	required uint32 UID = 4;
	required string Name = 5;
	required int32 Sex = 6;
	required int32 Job = 7;
	required int32 Level = 8;
	optional bytes Data = 9;
	optional string JsonData = 10;
}

message MPlayerLoginExtHumDataNtf {
	required int32 GID = 1;
	required int32 ConnID = 2;
	required uint32 UID = 3;
	required int32 ExtIndex = 4;
	optional bytes Data = 5;
}

message MSyncPlayerRankNtf {
	optional string Data = 1;
}

message MProtoTypeNtf {
	required int32 ProtoVersion = 1;
}

message MPlayerDisconnectedNtf {
	required int32 LID = 1;
	required int32 UID = 2;
}

//	C<->LS
message MLSAccessNtf {
	required int32 LID = 1;
	required string AccessToken = 2;
	required int32 GameType = 3;
}

message MVerifyAccountReq {
	required string Account = 1;
	required string Password = 2;
}

message MQuickMessageNtf {
	required int32 MsgId = 1;
	required int32 Param = 2;
}

message MServerListItem {
	required string ServerName = 1;
	required string ServerAddress = 2;
	required int32 ServerID = 3;
}

message MServerListNtf {
	repeated MServerListItem Servers = 1;
}

message MVerifyAccountRsp {
	required int32 Result = 1;
}

message MPlayerHumBaseData {
	required int32 RoleIndex = 1;
	required bytes RoleData = 2;
}

message MPlayerHumBaseDataNtf {
	repeated MPlayerHumBaseData Roles = 1; 
}

message MCreateHumReq {
	required string Name = 1;
	required int32 Job = 2;
	required int32 Sex = 3;
}

message MDelHumReq {
	required string Name = 1;
}

message MLoginGameReq {
	required string Name = 1;
	required string ServerName = 2;
}

message MCreateHumRsp {
	required string Name = 1;
	required int32 Job = 2;
	required int32 Sex = 3;
	required int32 Result = 4;
}

message MDelHumRsp {
	required string Name = 1;
}

message MDonateAddNtf {
	required int32 DonateCount = 1;
	required int32 DonateLeft = 2;
}

//	C<->S
message MRegisterClientReq {
	required int32 LID = 1;
	required int32 SID = 2;
	required string AccessToken = 3;
}